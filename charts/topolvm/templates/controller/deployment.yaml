apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  labels:
  {{- include "topolvm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  minReadySeconds: {{ .Values.controller.minReadySeconds }}
  strategy:
{{ toYaml .Values.controller.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: controller
    spec:
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}
      {{- with .Values.controller.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      serviceAccountName: controller
      containers:
        - name: topolvm-controller
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /topolvm-controller
            - --cert-dir=/certs
          ports:
            - containerPort: 9808
              name: healthz
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 60
          resources:
{{ toYaml .Values.controller.resources | indent 12 }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm
            - name: certs
              mountPath: /certs
        - name: csi-provisioner
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /csi-provisioner
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - "--feature-gates=Topology=true"
            - --enable-leader-election
            - --leader-election-namespace={{ .Release.Namespace }}
            - --leader-election-type=leases
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: csi-attacher
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /csi-attacher
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - --leader-election
            - --leader-election-namespace={{ .Release.Namespace }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm

        - name: csi-resizer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /csi-resizer
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
            - --leader-election
            - --leader-election-namespace={{ .Release.Namespace }}
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm
        - name: liveness-probe
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command:
            - /livenessprobe
            - "--csi-address=/run/topolvm/csi-topolvm.sock"
          volumeMounts:
            - name: socket-dir
              mountPath: /run/topolvm
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: certs
          secret:
            secretName: mutatingwebhook
     {{- with .Values.controller.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
     {{- if .Values.controller.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.controller.nodeSelector | indent 8 }}
    {{- end }}